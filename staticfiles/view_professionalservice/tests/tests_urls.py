from django.test import SimpleTestCase
from django.urls import reverse, reverse_lazy, resolve
from home.views import HomeInfoListView, MembershipView, PartnerListView, PrivateServiceView


# Testcase for test_"url"_url_is_resolved
class TestUrls(SimpleTestCase):
    # Tests if path loads correct view

    # class-based views need to be compared by name, as the functions
    # generated by as_view() won't be equal
    def test_home_url_resolves(self):

        url = reverse('home:home')
        resolver = resolve(url)
        self.assertEqual(resolver.func.view_class, HomeInfoListView)

    def test_privateservice_url_resolves(self):
        url = reverse('home:privateservice')
        resolver = resolve(url)
        self.assertEqual(resolver.func.view_class, PrivateServiceView)

    # MembershipView here is a function based view
    def test_membership_url_resolves(self):
       url = reverse('home:membership')
       self.assertEqual(resolve(url).func, MembershipView)

    def test_partner_url_resolves(self):
        url = reverse('home:partner')
        resolver = resolve(url)
        self.assertEqual(resolver.func.view_class, PartnerListView)

