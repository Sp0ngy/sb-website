"""
Django settings for sb_website project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
from django.utils.translation import gettext_lazy as _
#https://simpleisbetterthancomplex.com/2015/11/26/package-of-the-week-python-decouple.html
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0i&dr5_dk)4j805ar$s-#8wf_grjbz%oen60igvfj3^7cq0h%='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


#local MySQL Server and local server
ALLOWED_HOSTS = ['localhost']

# App Name // Websites Name
APP_NAME='SB_Website'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'home.apps.HomeConfig',

    'article.apps.ArticleConfig',

    'import_export',

    # https://django-import-export.readthedocs.io/en/
    'django_countries',

    'crispy_forms',

    # Scripting API
    # https://django-extensions.readthedocs.io/en/latest/shell_plus.html
    'django_extensions',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'sb_website.middleware_maintenance.MaintenanceModeMiddleware',
]

SESSION_EXPIRE_AT_BROWSER_CLOSE = True


ROOT_URLCONF = 'sb_website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'sb_website.wsgi.application'

# Docs: https://docs.djangoproject.com/en/4.0/ref/databases/#postgresql-notes
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'sb_database',
        'USER': 'postgres',
        'PASSWORD': 'shitshit01',
        'HOST': 'localhost',
        'PORT': 5432,
            },
    }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

# Default Language
LANGUAGE_CODE = 'en'

LANGUAGES = [
    ('en', _('English')),
    ('tr', _('Turkish')),
    ('de', _('German')),
]

# Default: LANGUAGE_COOKIE_NAME = 'django_language'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = (
    str(BASE_DIR.joinpath('static')),
    str(BASE_DIR.joinpath('static/home')),
    str(BASE_DIR.joinpath('static/home/files')),
    str(BASE_DIR.joinpath('static/home/modal_consulting')),
    str(BASE_DIR.joinpath('static/home/modal_contact')),
    str(BASE_DIR.joinpath('static/home/view_home')),
    str(BASE_DIR.joinpath('static/home/view_maintenance')),
    str(BASE_DIR.joinpath('static/home/view_membership')),
    str(BASE_DIR.joinpath('static/home/view_privateservice')),
    str(BASE_DIR.joinpath('static/home/view_professionalservice')),
)

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale')
]

#Email Settings
EMAIL_HOST = 'localhost'
EMAIL_PORT = '1025'
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = False
# EMAIL_USE_SSL = False

#Maintenance environmental variable
#os.environ.get(int('MAINTENANCE_MODE', '0'))
MAINTENANCE_MODE = 0
MAINTENANCE_BYPASS_QUERY = 'Nicoiscool'

# Security Settings required by check --deploy
CSRF_USE_SESSIONS = True
SESSION_COOKIE_SECURE = True



SECURE_SSL_REDIRECT=False
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False

#S3 vars
#https://devcenter.heroku.com/articles/s3-upload-python
USE_S3 = config('USE_S3', cast=bool)

# TODO: Make aws policies correctly
if USE_S3 == True:
    #S3 settings
    AWS_ACCESS_KEY_ID = config("AWS_ACCESS_KEY_ID")
    AWS_SECRET_ACCESS_KEY = config("AWS_SECRET_ACCESS_KEY")
    AWS_STORAGE_BUCKET_NAME = config("AWS_STORAGE_BUCKET_NAME")
    AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
    AWS_S3_FILE_OVERWRITE = False
    AWS_DEFAULT_ACL = None
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

